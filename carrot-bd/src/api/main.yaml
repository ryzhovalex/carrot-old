info:
  title: carrot
  version: 0.1.0dev
openapi: 3.0.2
paths:
  # Auth #
  /register:
    post:
      summary: Register user in the system
      requestBody:
        $ref: auth.yaml#/register_request
      responses:
        '200':
          description: OK
  /login:
    post:
      summary: Login user in the system
      description: >
        Check if given username and password match for a user and generate
        a JWT token
      requestBody:
        content:
          application/json:
            schema:
              $ref: auth.yaml#/login_data
        required: true
      responses:
        '200':
          description: >
            Given credentials matched and user logged with token creation
          content:
            application/json:
              schema:
                $ref: auth.yaml#/login_token
  /logout:
    post:
      summary: Logout user from the system
      description: >
        Destroy JWT token of user and thus logout him
      parameters:
        - $ref: common.yaml#/authorization_bearer_header
      responses:
        '200':
          description: OK
        '440':
          $ref: auth.yaml#/session_expired_response

  # Task #
  /tasks/self:
    get:
      summary: Get self tasks
      parameters:
        - $ref: common.yaml#/authorization_bearer_header
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: task.yaml#/tasks
  /tasks/{id}:
    patch:
      summary: Patch task
      parameters:
        - $ref: common.yaml#/id_path
      requestBody:
        $ref: task.yaml#/patch_request
      responses:
        '200':
          description: OK
  /tasks/{id}/complete:
    post:
      summary: Complete task
      parameters:
        - $ref: common.yaml#/id_path
      responses:
        '200':
          description: OK
  /tasks:
    post:
      summary: Create task
      requestBody:
        $ref: task.yaml#/create_request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: task.yaml#/task

  # Project #
  /projects/self:
    get:
      summary: Get self projects
      parameters:
        - $ref: common.yaml#/authorization_bearer_header
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: project.yaml#/projects
  /projects/{id}:
    patch:
      summary: Patch project
      parameters:
        - $ref: common.yaml#/id_path
      requestBody:
        $ref: project.yaml#/patch_request
      responses:
        '200':
          description: OK
  /projects:
    post:
      summary: Create project
      requestBody:
        $ref: project.yaml#/create_request
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: project.yaml#/project

  # User #
  /users/self:
    get:
      summary: Get user for current auth token
      parameters:
        - $ref: common.yaml#/authorization_bearer_header
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: user.yaml#/user
  /users/{id}:
    patch:
      summary: Patch user
      parameters:
        - $ref: common.yaml#/id_path
      requestBody:
        $ref: user.yaml#/patch_request
      responses:
        '200':
          description: OK
